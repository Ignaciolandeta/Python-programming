my Certification https://coursera.org/share/0f5930a0d58ad5c80e88e98d0e5f7beb
1) EXPRESSIONS

#Order of evaluation rules example;
y = 1 + 2 * 3 - 8 / 4
print(y)

#User Input
nam = input('Who are you?')
print('Welcome', nam)


#Program example: Convert elevator floors
inp = input('Europe floor?')
usf = int(inp) + 1
print('US floor', usf)


#2.3 Write a program to prompt the user for hours and rate per hour using input to compute gross pay. Use 35 hours and a rate of 2.75 per hour to test the program (the pay should be 96.25). You should use input to read a string and float() to convert the string to a number. Do not worry about error checking or bad user data.
hrs = input("Enter Hours: ")
rate = input('Enter Rate: ')
gpay = float(hrs) * float(rate)
print('Pay:', gpay)








2) CONDITIONAL STATEMENTS

#conditional statements: indented blocks
x = 4
if x>2:
    print('Bigger')
else:
    print('Smaller')
print('All done')


#conditional statements: Multi-Way, ELIF
x=5
if x<2:
    print('small')
elif x<10:
    print('medium')
elif x<20:
    print('long')
else:
    print('LARGE')
print('All done')


#3.1 Write a program to prompt the user for hours and rate per hour using input to compute gross pay. Pay the hourly rate for the hours up to 40 and 1.5 times the hourly rate for all hours worked above 40 hours. Use 45 hours and a rate of 10.50 per hour to test the program (the pay should be 498.75). You should use input to read a string and float() to convert the string to a number. Do not worry about error checking the user input - assume the user types numbers properly.
hrs = input("Enter Hours:")
h = float(hrs)
rate = input('Enter Rate:')
r = float(rate)
if h <= 40:
    print(h * r)
else:
    print(40*r + (h-40)*1.5*r)


#3.3 Write a program to prompt for a score between 0.0 and 1.0. If the score is out of range, print an error. If the score is between 0.0 and 1.0, print a grade using the following table:
#Score Grade
#>= 0.9 A
#>= 0.8 B
#>= 0.7 C
#>= 0.6 D
#< 0.6 F
#If the user enters a value out of range, print a suitable error message and exit. For the test, enter a score of 0.85.
score = input("Enter Score: ")
try:
    iscore=float(score)
except:
    print('Must enter a number between 0.0 and 1.0')
if iscore<0.0:
    print('Must enter a number between 0.0 and 1.0')
elif iscore>1.0:
    print('Must enter a number between 0.0 and 1.0')
elif iscore>=0.9:
    print('A')
elif iscore>=0.8:
    print('B')
elif iscore>=0.7:
    print('C')
elif iscore>=0.6:
    print('D')
elif iscore<0.6:
    print('F')



#Try & Except
astr='hello bob'
try:
    istr=int(astr)
except:
    istr=-1
print('First', istr)

astr='123'
try:
    istr=int(astr)
except:
    istr=-1
print('Second', istr)


astr='Bob'
try:
    print('Hello')
    istr=int(astr) #traceback
    print('There')
except:
    istr=-1 #"safety net in case traceback"
print('Done', istr)

#sample program try/Except
rawstr = input('Enter a number:')
try:
    ival=int(rawstr)
except:
    ival=-1
if ival>=0:
    print('Nice work')
else:
    print('Not a number')


astr = 'Hello Bob'
istr = 0
try:
    istr = int(astr)
except:
    istr = -1
print(istr)







3) FUNCTIONS

#Function example
def print_lyrics():
    print('I am a lumberjack, and I am okay')
    print('I sleep all night and I work all day')
print_lyrics() #call the function to run

#Functions: Parameters
def greet(lang):
    if lang == 'es':
        print('Hola')
    elif lang == 'fr':
        print('Bonjour')
    else:
        print('Hello')
greet('en')
greet('es')
greet('fr')


#Functions: Return value
def greet():
    return 'Hello'
print(greet(), 'Glenn')
print(greet(), 'Sally')

##Functions: Return value2
def greet(lang):
    if lang == 'es':
        return 'Hola'
    elif lang == 'fr':
        return 'Bonjour'
    else:
        return 'Hello'
print(greet('en'), 'Gelnn')
print(greet('es'), 'Sally')
print(greet('fr'), 'Michael')


#Functions: Multiple Parameters and Arguments
def addtwo(a,b):
    added = a + b
    return added

x = addtwo(3, 5)
print(x)



#4.6 Write a program to prompt the user for hours and rate per hour using input to compute gross pay. Pay should be the normal rate for hours up to 40 and time-and-a-half for the hourly rate for all hours worked above 40 hours. Put the logic to do the computation of pay in a function called computepay() and use the function to do the computation. The function should return a value. Use 45 hours and a rate of 10.50 per hour to test the program (the pay should be 498.75). You should use input to read a string and float() to convert the string to a number. Do not worry about error checking the user input unless you want to - you can assume the user types numbers properly. Do not name your variable sum or use the sum() function.
hrs = input("Enter Hours:")
h = float(hrs)
rate = input('Enter rate per hour:')
r = float(rate)

def computepay(h,r):
    if h <= 40.0:
        return (h * r)
    elif h > 40.0:
        return ((40.0 * r) + ((h - 40.0) * 1.5 * r))
print("Pay",computepay(h,r))








3) LOOPS & ITERATIONS

#Repeated Steps
n = 5
while n > 0:
    print(n)
    n = n - 1
print('Blastoff!')
print(n)


#Breaking Out of a Loop
while True:
    line = input('> ')
    if line == 'done':
        break
    print('line')
print('Done!')


#Definite loops: FOR
for i in [5, 4, 3, 2, 1]:
    print(i)
print('Blastoff!')

#Definite loop with Strings
friends = ['Joseph', 'Glenn', 'Sally']
for friend in friends:
    print('Happy New Year:', friend)
print('Done!')

#Looping through a Set
print('Before')
for thing in [9, 41, 12, 3, 74, 15]:
    print(thing)
print('After')

#Finding the Largest Number
largest_so_far = -1
print('Before', largest_so_far)
for the_num in [9, 41, 12, 3, 74, 15]:
    if the_num > largest_so_far:
        largest_so_far = the_num
    print(largest_so_far, the_num)
print('After', largest_so_far)

#Counting in a Loop
count = 0
print('Before', count)
for thing in [9, 41, 12, 3, 74, 15]:
    count = count + 1
    print(count, thing)
print('After', count)


#Summing in a Loop
sum = 0
print('Before', sum)
for thing in [9, 41, 12, 3, 74, 15]:
    sum = sum + 1
    print(sum, thing)
print('After', sum)


#Finding the Average in a Loop
count = 0
sum = 0
for value in [9, 41, 12, 3, 74, 15]:
    count = count + 1
    sum = sum + value
    print(count, sum, value)
print('After', count, sum, sum / count)


#Filtering in a loop
print('Before')
for value in [9, 41, 12, 3, 74, 15]:
    if value >20:
        print ('Large number', value)
print('After')


#Search using a Boolean Varaible
found = False
for value in [9, 41, 12, 3, 74, 15]:
    if value == 3:
        found = True
    print(found, value)
print('After', found)


#Finding the Smallest Number
smallest = None  #flag value
print('Before')
for value in [9, 41, 12, 3, 74, 15]:
    if smallest is None: #"is" operator as "is the same as.."
        smallest = value
    elif value < smallest:
        smallest = value
    print(smallest, value)
print ('After', smallest)



#5.2 Write a program that repeatedly prompts a user for integer numbers until the user enters 'done'. Once 'done' is entered, print out the largest and smallest of the numbers. If the user enters anything other than a valid number catch it with a try/except and put out an appropriate message and ignore the number. Enter 7, 2, bob, 10, and 4 and match the output below.

largest = None
smallest = None

while True:
    try:
        num = input('Enter a number: ')
        if num == 'done':
            break
        n = int(num)
        if largest is None or n > largest:
            largest = n
        elif smallest is None or n < smallest:
        	smallest = n

    except:
        print('Invalid input')
        continue

print('Maximum is', largest)
print('Minimum is', smallest)




